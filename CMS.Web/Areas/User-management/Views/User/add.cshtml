@model UserModel
@{
    ViewData["Title"] = "New User";
}
<div class="page-breadcrumbs">
    <ul class="breadcrumb">
        <li>
            <i class="fa fa-home"></i>
            <a href="/admin">Home</a>
        </li>
        <li>
            Users
        </li>
    </ul>
</div>

<div class="page-body">
    <div class="row">
        <div class="col-lg-12 col-sm-12 col-xs-12">
            <div class="row">
                <div class="col-lg-6 col-sm-6 col-xs-12">
                    <div class="widget radius-bordered">
                        <div class="widget-header">
                            <span class="widget-caption">USERS</span>
                        </div>
                        <div class="widget-body">
                            <form class="form-horizontal" method="post" enctype="multipart/form-data">

                                @Html.ValidationSummary(true)

                                @Html.AntiForgeryToken()
                                <div class="form-group row">
                                    @Html.LabelFor(a => a.full_name, new { @class = "col-md-3 control-label" })

                                    <div class="col-md-9">
                                        @Html.TextBoxFor(a => a.full_name, new { @class = "form-control" })

                                    </div>

                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.full_name)</p>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(a => a.address_line_1, new { @class = "col-md-3 control-label" })

                                    <div class="col-md-9">
                                        @Html.TextBoxFor(a => a.address_line_1, new { @class = "form-control" })
                                    </div>

                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.address_line_1)</p>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(a => a.address_line_2, new { @class = "col-md-3 control-label" })

                                    <div class="col-md-9">
                                        @Html.TextBoxFor(a => a.address_line_2, new { @class = "form-control" })

                                    </div>

                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.address_line_2)</p>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(a => a.primary_contact, new { @class = "col-md-3 control-label" })

                                    <div class="col-md-9">
                                        @Html.TextBoxFor(a => a.primary_contact, new { @class = "form-control" })
                                    </div>

                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.primary_contact)</p>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(a => a.secondary_contact, new { @class = "col-md-3 control-label" })

                                    <div class="col-md-9">
                                        @Html.TextBoxFor(a => a.secondary_contact, new { @class = "form-control" })

                                    </div>

                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.secondary_contact)</p>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(a => a.email, new { @class = "col-md-3 control-label", @type = "email" })

                                    <div class="col-md-9">
                                        @Html.TextBoxFor(a => a.email, new { @class = "form-control" })
                                    </div>

                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.email)</p>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(a => a.username, new { @class = "col-md-3 control-label" })

                                    <div class="col-md-9">
                                        @Html.TextBoxFor(a => a.username, new { @class = "form-control" })

                                    </div>

                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.username)</p>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(a => a.password, new { @class = "col-md-3 control-label" })

                                    <div class="col-md-9">
                                        @Html.PasswordFor(a => a.password, new { @class = "form-control" })

                                    </div>

                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.password)</p>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(a => a.confirm_paswword, new { @class = "col-md-3 control-label" })

                                    <div class="col-md-9">
                                        @Html.PasswordFor(a => a.confirm_paswword, new { @class = "form-control" })

                                    </div>
                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.confirm_paswword)</p>
                                </div>

                                <div class="form-group row">
                                    @Html.LabelFor(a => a.image_path, new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        <input type="file" value="Choose File" name="form" id="file" />
                                    </div>
                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.image_path)</p>
                                </div>
                                <div class="form-group row">
                                    @Html.LabelFor(a => a.roles, "Roles", new { @class = "col-md-3 control-label" })
                                    <div class="col-md-9">
                                        @{
                                            int i = 0;
                                            foreach (var role in (List<AssignedRole>)ViewBag.roles)
                                            {
                                            @Html.CheckBox("roles[" + i + "].is_checked", role.is_checked)<text>&nbsp;&nbsp;&nbsp;<input name="roles[@i].role_id" value="@role.role_id" type="hidden" />@role.role_name <br /></text>
                                                i++;
                                            }
                                        }

                                    </div>

                                    <p class="text-danger">@Html.ValidationMessageFor(a => a.roles)</p>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <input class="btn btn-palegreen pull-right" type="submit" value="Save" style="background-color:#2dc3e8" />
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 col-lg-offset-2  images-list" id="previewImg">
                    <img id="image" class="image-preview" src="#" alt="" />
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>

        $("#file").change(function () {
            readURL(this);
        });
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#image').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>
}

