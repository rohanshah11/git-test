// <auto-generated />
using System;
using CMS.User.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CMS.User.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20190121083310_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CMS.User.Entity.Authentication", b =>
                {
                    b.Property<long>("authentication_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("is_enabled");

                    b.Property<string>("password")
                        .IsRequired();

                    b.Property<int>("type");

                    b.Property<long>("type_id");

                    b.Property<string>("username")
                        .IsRequired();

                    b.HasKey("authentication_id");

                    b.ToTable("authentications");
                });

            modelBuilder.Entity("CMS.User.Entity.LoginSession", b =>
                {
                    b.Property<long>("login_session_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("authentication_id");

                    b.Property<DateTime>("date_time");

                    b.Property<int>("type");

                    b.HasKey("login_session_id");

                    b.HasIndex("authentication_id");

                    b.ToTable("login_sessions");
                });

            modelBuilder.Entity("CMS.User.Entity.Role", b =>
                {
                    b.Property<long>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("is_enabled");

                    b.Property<string>("name");

                    b.HasKey("role_id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("CMS.User.Entity.RolePermissionMap", b =>
                {
                    b.Property<long>("role_permission_map_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("permission_name");

                    b.Property<long>("role_id");

                    b.HasKey("role_permission_map_id");

                    b.HasIndex("role_id");

                    b.ToTable("role_permission_maps");
                });

            modelBuilder.Entity("CMS.User.Entity.User", b =>
                {
                    b.Property<long>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address_line_1")
                        .IsRequired();

                    b.Property<string>("address_line_2");

                    b.Property<long>("created_by");

                    b.Property<DateTime>("created_date");

                    b.Property<string>("email");

                    b.Property<string>("full_name")
                        .IsRequired();

                    b.Property<string>("image_path");

                    b.Property<bool>("is_active");

                    b.Property<string>("primary_contact")
                        .IsRequired();

                    b.Property<string>("secondary_contact");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("CMS.User.Entity.UserRole", b =>
                {
                    b.Property<long>("user_role_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("role_id");

                    b.Property<int>("type");

                    b.Property<long>("type_id");

                    b.Property<long?>("user_id");

                    b.HasKey("user_role_id");

                    b.HasIndex("role_id");

                    b.HasIndex("user_id");

                    b.ToTable("user_roles");
                });

            modelBuilder.Entity("CMS.User.Entity.LoginSession", b =>
                {
                    b.HasOne("CMS.User.Entity.Authentication", "authentication")
                        .WithMany()
                        .HasForeignKey("authentication_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CMS.User.Entity.RolePermissionMap", b =>
                {
                    b.HasOne("CMS.User.Entity.Role", "role")
                        .WithMany("permissions")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CMS.User.Entity.UserRole", b =>
                {
                    b.HasOne("CMS.User.Entity.Role", "role")
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CMS.User.Entity.User")
                        .WithMany("roles")
                        .HasForeignKey("user_id");
                });
#pragma warning restore 612, 618
        }
    }
}
